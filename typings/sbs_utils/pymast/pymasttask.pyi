from sbs_utils.pymast.pollresults import PollResults
from sbs_utils.pymast.pymastcomms import PyMastComms
from sbs_utils.pymast.pymastscience import PyMastScience
class DataHolder(object):
    """class DataHolder"""
class PyMastTask(object):
    """class PyMastTask"""
    def __init__ (self, story, scheduler, label) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""
    def _delay (self, delay):
        ...
    def _run_invert (self, label):
        ...
    def _run_sel (self, labels):
        ...
    def _run_seq (self, labels):
        ...
    def _run_until (self, poll_result, label):
        ...
    def await_comms (self, player, npc, buttons):
        ...
    def await_gui (self, buttons, timeout, on_message=None):
        ...
    def await_science (self, player, npc, scans):
        ...
    def behave_invert (self, label):
        ...
    def behave_sel (self, *labels):
        ...
    def behave_seq (self, *labels):
        ...
    def behave_until (self, poll_result, label):
        ...
    def delay (self, delay):
        ...
    def do_jump (self):
        ...
    def get_gen (self, label):
        ...
    def jump (self, label):
        ...
    def on_event (self, sim, event):
        ...
    def pop (self):
        ...
    def push (self, label):
        ...
    def quick_push (self, func):
        ...
    def run_comms (self, player, npc, buttons):
        ...
    def run_science (self, player, npc, scans):
        ...
    def tick (self, sim):
        ...
    def watch_event (self, event_tag, label):
        ...
